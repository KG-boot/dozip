<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dozip">
    <!--로그인(아이디에 해당하는 비밀번호 가져오기)-->
    <select id="mlogin_check" resultType="String">
        select mem_pwd from memberT where mem_id=#{mem_id} and mem_withdraw=0
    </select>

    <!--회원가입-->
    <insert id="in_m">
        insert into memberT
		(mem_id, mem_pwd, mem_name, mem_tel, mem_email, mem_domain, mem_joinType)
		values (#{mem_id},#{mem_pwd},#{mem_name}, #{mem_tel}, #{mem_email},#{mem_domain},'일반')
    </insert>

    <!--회원가입-아이디중복확인-->
    <select id="check_id" resultType="int">
        select count(mem_id) from memberT where mem_id=#{mem_id}
    </select>

    <!--아이디 찾기-->
    <select id="find_mid" resultType="String">
        select mem_id from memberT where mem_name=#{mem_name} and mem_tel=#{mem_tel}
    </select>

    <!--회원정보 불러오기-->
    <select id="m_info" parameterType="String" resultType="MemberVO">
        select * from memberT where mem_id=#{mem_id}
    </select>

    <!--비번찾기(회원정보일치여부확인)-->
    <select id="check_m" resultType="int">
        select count(mem_pwd) from memberT where mem_id=#{mem_id} and mem_name=#{mem_name}
        and mem_tel=#{mem_tel} and mem_email=#{mem_email} and mem_domain=#{mem_domain}
    </select>

    <!--회원정보 수정-->
    <update id="m_update">
        update memberT set mem_name=#{mem_name}, mem_tel=#{mem_tel}, mem_email=#{mem_email}, mem_domain=#{mem_domain},
                           mem_zip=#{mem_zip}, mem_addr1=#{mem_addr1}, mem_addr2=#{mem_addr2} where mem_id=#{mem_id}
    </update>

    <!--비밀번호 변경-->
    <update id="change_pwd">
        update memberT set mem_pwd=#{mem_pwd} where mem_id=#{mem_id}
    </update>

    <!--문의글 총 개수(해당 아이디의 작성 글 개수 확인 - 관리자)-->
    <select id="listQ_count" resultType="int">
        select count(qna_no) from qnaT where mem_id=#{mem_id} and qna_state=1 and (businessNum is null)
    </select>

    <!--관리자 문의글 리스트-->
    <select id="get_Qlist" resultType="QnaVO">
        select * from (
        select rowNum r, qna_no, mem_id, businessNum, qna_type,qna_title,
        qna_cont,qna_date,edit_date,qna_state,qna_ref,qna_step,
        qna_level,reply_state,reply_date
        from (select*from qnaT where mem_id=#{mem_id} order by qna_ref desc, qna_level asc)
        where (businessNum is null)
        )where r &gt;=#{startrow} and r &lt;=#{endrow}
    </select>

    <!--문의글 총 개수(해당 아이디의 작성 글 개수 확인 - 업체)-->
    <select id="listP_count" resultType="int">
        select count(qna_no) from qnaT where mem_id=#{mem_id} and qna_state=1 and (businessNum is not null)
    </select>

    <!--업체 문의글 리스트-->
    <select id="get_Plist" resultType="QnaVO">
        select * from (
        select rowNum r, qna_no, mem_id, q.businessNum, qna_type,qna_title,
        qna_cont,qna_date,edit_date,qna_state,qna_ref,qna_step,
        qna_level,reply_state,reply_date, p.businessName
        from (select*from qnaT where mem_id=#{mem_id} order by qna_ref desc, qna_level asc) q, partnersT p
        where q.businessNum=p.businessNum(+) and (q.businessNum is not null)
        )where r &gt;=#{startrow} and r &lt;=#{endrow}
    </select>

    <!--문의글 작성 (관리자/업체 둘 다)-->
    <insert id="in_Qna">
        insert into qnaT
		(qna_no, mem_id, businessNum, qna_type, qna_title, qna_cont, qna_date, qna_ref, qna_step, qna_level, reply_state)
		values (qnaT_no_seq.nextval,#{mem_id},#{businessNum, jdbcType = VARCHAR},#{qna_type},#{qna_title},#{qna_cont},sysdate,qnaT_no_seq.nextval,0,0,'미답변')
    </insert>

    <!--사업자번호 찾기-->
    <select id="get_Bnum" resultType="String">
        select businessNum from partnersT where businessName=#{businessName}
    </select>

    <!--업체명 불러오기-->
    <select id="get_P" resultType="String">
        select businessName from partnersT
    </select>


    <!-- 근처의 파트너스 불러오기 -->
    <select id="search_p" resultType="PartnersVO">
        select * from PARTNERST where p_address like #{p_address}
    </select>

    <!-- 근처 파트너스 숫자 -->
    <select id="counter_partners" resultType="int">
        select count(*) from PARTNERST where p_address like #{p_address}
    </select>
</mapper>

