<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

    <mapper namespace="partners">
        <!--파트너스 정보 조회 -->
        <select id="partners_info" resultType="PartnersVO">
        select * from partnersT where p_Id=#{p_Id}
    </select>

    <!--파트너스 회원가입 -->
    <insert id="partners_in">
        insert into partnersT (businessNum, businessName, p_Id, p_Pw, p_Name, p_Tel, p_MailId, p_MailDomain, p_Date)
        values(#{businessNum}, #{businessName}, #{p_Id}, #{p_Pw}, #{p_Name}, #{p_Tel}, #{p_MailId}, #{p_MailDomain}, sysdate)
    </insert>
    <!--사업자번호 중복체크 -->
    <select id="check_bnum" resultType="int">
        select count(*) from PARTNERST where businessNum=#{businessNum}
    </select>

    <!-- 파트너스 아이디 찾기위한 정보조회 -->
    <select id="findinfo_id" resultType="PartnersVO">
        select * from partnersT where businessNum=#{businessNum}
    </select>


    <!-- 고객문의글 개수 조회 -->
    <select id="qna_count" resultType="int">
        select count(qna_no) from qnaT Left Join memberT On qnaT.mem_id = memberT.mem_id where businessNum=#{businessNum} and qna_state=1
    </select>

    <!--고객 문의글 불러오기 -->
    <select id="partners_qna_list" resultType="QnaVO">
        select * from (select rowNum rNum, qna_no, m.mem_id, qna_type, qna_title, qna_cont, qna_date, qna_ref, qna_step, qna_level, reply_state, reply_date, m.mem_name
                       from (select*from qnaT where businessNum= #{businessNum} and qna_state=1
        <!--


              검색 기능 구현해야함

              -->
        order by qna_ref desc, qna_level asc) q, memberT m where q.mem_id = m.mem_id(+)) where rNum &gt;= #{startrow} and rNum &lt; #{endrow}
    </select>

    <!--답변글 레벨 증가 -->
    <update id="reply_levelUp">
        update qnaT set qna_level=qna_level+1 where qna_ref=#{qna_ref} and qna_level >#{qna_level}
    </update>

    <!--state 답변완료로 변경 -->
    <update id="change_state">
        update qnat set reply_state='답변완료' where qna_ref=#{qna_ref}
    </update>
    <!-- 고객문의 글답변 -->
    <insert id="partners_reply_in"> <!--,실수! -->
        insert into qnaT (qna_no, mem_id businessNum, qna_type, qna_title, qna_cont, qna_ref, qna_step, qna_level, reply_state, reply_date)
        values (qnaT_no_seq.nextval, #{mem_id}, #{businessNum}, #{qna_type}, #{qna_title}, #{qna_cont}, #{qna_ref}, #{qna_step}+1, #{qna_level}+1, '답변완료', sysdate)
    </insert>

    <!-- 댓글 삭제 -->
    <delete id="del_reply">
        delete qnaT where qna_no=#{qna_no}
    </delete>
    <!--글 그룹 조회 -->
    <select id="sel_qnaRef" resultType="int">
        select count(*) from qnaT where qna_ref= #{qna_ref}
    </select>
    <!-- 원본글을 다시 미답변 상태로-->
    <update id="returnState">
        update qnaT set reply_state='미답변' where qna_no=#{qna_ref}
    </update>

    <!-- data_manage 정보수정 -->
    <select id="select_data" resultType="PartnersVO">
        select * from partnersT where businessNum=#{businessNum, jdbcType=VARCHAR}
        <!--select * from partnersT where businessNum=105 -->
    </select>

    <select id="select_subdata" resultType="Partners_subVO">
        select * from partners_subT where businessNum=#{businessNum, jdbcType=VARCHAR}
    </select>

    <update id="update_subdata" parameterType="Partners_subVO">
        update Partners_subT set businessNum=#{businessNum, jdbcType=VARCHAR}, p_Shortstate=#{p_Shortstate, jdbcType=VARCHAR},p_Homepg=#{p_Homepg, jdbcType=VARCHAR},
        p_Res_person_name=#{p_Res_person_name, jdbcType=VARCHAR}
        <!--,p_Res_person_tel=#{p_Res_person_tel},p_Com_person_name=#{p_Com_person_name},p_Com_person_tel=#{p_Com_person_tel},
        p_Balance=#{pBalance},p_Account_bank=#{p_Account_bank},p_Account_name=#{p_Account_name},p_Account_num=#{p_Account_num}-->
        where businessNum=#{businessNum, jdbcType=VARCHAR}
    </update>

    <update id="update_data" parameterType="PartnersVO">
        update PartnersT set p_Address=#{pAddress, jdbcType=VARCHAR} where businessNum=#{businessNum, jdbcType=VARCHAR}
    </update>

    <insert id="insert_subdata">
        insert into Partners_subT (businessNum, p_Shortstate,p_Homepg,p_Res_person_name)
        values(#{businessNum},#{p_Shortstate, jdbcType=VARCHAR},#{p_Homepg, jdbcType=VARCHAR},#{p_Res_person_name, jdbcType=VARCHAR})
    </insert>

    <!-- 입찰 리스트 -->
    <select id="select_estdata" resultType="EstimateVO">
        select * from estimateT where mem_id=#{mem_id,jdbcType=VARCHAR}
    </select>

    <select id="res_check" resultType="int">
        select count(businessNum) from Partners_subT where businessNum=#{businessNum}
    </select>
</mapper>

